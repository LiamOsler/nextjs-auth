[{"name": "app.py", "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n\n    ui.tags.script(\n       \"\"\"\n        let search =  window.parent.location.search.substring(1);\n        let searchArray = search.split('&');\n        let searchObject = {};\n        for(item of searchArray){\n            let key = item.split('=')[0];\n            let value = item.split('=')[1];\n            searchObject[key] = value;\n        }\n        console.log(searchObject);\n        \n        $(document).on('shiny:connected', function(event) {\n            Shiny.setInputValue(\"searchString\", searchObject);\n        }); \n       \"\"\"\n    ),\n\n    ui.h2(\"Hello Shiny!\"),\n\n    ui.input_slider(\"n\", \"N\", 0, 100, 20),\n    ui.input_slider(\"k\", \"K\", 0, 100, 20),\n    ui.output_text_verbatim(\"ntxt\"),\n    ui.output_text_verbatim(\"ktxt\"),\n    ui.output_text_verbatim(\"kntxt\"),\n    ui.output_text_verbatim(\"search\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def ntxt():\n        return f\"n*2 is {input.n() * 2}\"\n\n    @output\n    @render.text\n    def ktxt():\n        return f\"k*2 is {input.k() * 2}\"\n\n    @output\n    @render.text\n    def kntxt():\n        return f\"k*n is {input.k() * input.n()}\"\n\n    @output\n    @render.text\n    def search():\n        return f\"Search string is : {input.searchString()}\"\n    \n    \n\napp = App(app_ui, server)\n", "type": "text"}]